print('yo')
}
}
if (i==user.name){
print('yo')
}
##
data.frame('a'=c(1,2,3), 'b'=c(1,2,3))
##
f <-  data.frame('a'=c(1,2,3), 'b'=c(1,2,3))
f[2]
f[,2]
##
f <-  data.frame('a'=c(1,2,3), 'b'=c(4,5,6))
f[1,]
f
add.or.update.user <- function(df, user.name, password){
j=1
for (i in df$user.name){
if(i == user.name){
df[j+1,] = c(user.name,password)
}
else {
j = j+1
}
}
df <- rbind(df,c(user.name,password))
return(df)
}
install.packages("caesar")
coded = caesar("Message to be encoded", shift=1)
print(paste("Encoded message:", coded))
library(caesar)
coded = caesar("Message to be encoded", shift=1)
print(paste("Encoded message:", coded))
decoded = caesar(coded, shift=1, decrypt = TRUE)
print(paste("Decoded message:", decoded))
install.packages('PKI')
library(PKI)
# Create a keypair and save them in PEM format to variables
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
print(prv.pem)
pub.pem <- PKI.save.key(key, private=FALSE)
print(pub.pem)
# Extract the Public key from the public key's PEM format
pub.key <- PKI.load.key(pub.pem)
prv.key <- PKI.load.key(prv.pem)
# Encrypt with the public key
bytes.to.encode = charToRaw("Hello, asymmetric encryption!")
encrypted <- PKI.encrypt(bytes.to.encode, pub.key)
print(encrypted)
# Decrypt with the private key
decrypted <- rawToChar(PKI.decrypt(encrypted, prv.key))
print(decrypted)
# Save the keys to a file, then load them back
write(pub.pem, file="id_rsa.pub") # Save Public key
write(prv.pem, file="id_rsa")     # Save Private key
pub.pem.loaded <- scan("id_rsa.pub", what='list', sep='\n') # Load
prv.pem.loaded <- scan("id_rsa", what='list', sep='\n') # Load
# Extract the key objects from the PEM file
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
# Let's encrypt and decrypt, again!
encrypted.again <- PKI.encrypt(charToRaw("Hello, asymmetric encryption, again!"), pub.key.loaded)
decrypted.again <- rawToChar(PKI.decrypt(encrypted.again, prv.key.loaded))
print(decrypted.again)
print(pub.pem)
write(pub.pem, file="id_rsa.pub_zsombor")
pub.pem.zsomb.loaded <- scan("id_rsa.pub_zsombor", what='list', sep='\n') # Load
pub.pem.loaded_yuri <- scan("id_rsa.pub_yuri", what='list', sep='\n') # Load
pub.pem.loaded_yuri <- scan("id_rsa_yuri.pub", what='list', sep='\n') # Load
pub.pem.loaded_yuri <- scan("id_rsa_yuri.pub", what='list', sep='\n') # Load
# Extract the key objects from the PEM file
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
encrypted_for_all <- PKI.encrypt(bytes.to.encode, pub.key)
print(encrypted_for_all)
bytes.to.encode.forall = charToRaw("Hey guys, these encryptions are quite complex")
encrypted_for_all <- PKI.encrypt(bytes.to.encode.forall, pub.key)
print(encrypted_for_all)
pub.pem.loaded_yuri <- scan("id_rsa.pub_zsombor", what='list', sep='\n') # Load
pub.pem.loaded_yuri <- scan("id_rsa_yuri.pub", what='list', sep='\n') # Load
# Save the keys to a file, then load them back
write(pub.pem, file="id_rsa_zsombor.pub") # Save Public key
pub.pem.loaded_viki <- scan("Viki_key.pub", what='list', sep='\n') # Load
decrypted_for_all <- rawToChar(PKI.decrypt(encrypted_for_all, prv.key))
decrypted_fot_all
decrypted_for_all <- rawToChar(PKI.decrypt(encrypted_for_all, prv.key))
decrypted_fot_all
decrypted_for_all
writeBin(decrypted_for_all, file("encrypted_message.dat", "wb"))
close(write.binfile)
close(file("encrypted_message.dat", "wb"))
decrypted_for_all <- rawToChar(PKI.decrypt(encrypted_for_all, pub.key))
decrypted_for_all
decrypted_for_all <- rawToChar(PKI.decrypt(encrypted_for_all, pub.key))
decrypted_for_all <- rawToChar(PKI.decrypt(encrypted_for_all, prv.key))
decrypted_for_all
read.binfile <- file("encrypted_data_file_viki.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999) # 'n' says how many bytes
close(read.binfile)
solution_viki <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
solution_viki
pub.pem.loaded_yuri <- scan("id_rsa_yuri.pub", what='list', sep='\n') # Load
encrypted_for_all <- PKI.encrypt(bytes.to.encode.forall, pub.pem.loaded_yuri)
pub.key.loaded_yuri <- PKI.load.key(pub.pem.loaded_yuri)
encrypted_for_all <- PKI.encrypt(bytes.to.encode.forall, pub.key.loaded_yuri)
writeBin(encrypted_for_all, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
library(PKI)
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's private key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
?file()
write(pub.pem, file="id_ceu_edu.pub")
library(PKI)
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's public key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
# Adding second message ---------------------------------------------------
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
# 5) CEU reads it's private key from disk + decrypts message -----------------
##load private key from disk + convert to key
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
print(decrypted_message2)
print(decrypted_message)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
library(PKI)
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's public key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
# Adding second message ---------------------------------------------------
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
# 5) CEU reads it's private key from disk + decrypts message -----------------
##load private key from disk + convert to key
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
rm(list = ls())
library(PKI)
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's public key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
# Adding second message ---------------------------------------------------
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
# 5) CEU reads it's private key from disk + decrypts message -----------------
##load private key from disk + convert to key
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
library(PKI)
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's public key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
# Adding second message ---------------------------------------------------
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
# 5) CEU reads it's private key from disk + decrypts message -----------------
##load private key from disk + convert to key
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
rm(list = ls())
library(PKI)
rm(list = ls())
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's public key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
# Adding second message ---------------------------------------------------
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
# 5) CEU reads it's private key from disk + decrypts message -----------------
##load private key from disk + convert to key
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
## second message
decrypted_message2 <- rawToChar(PKI.decrypt(reread.encrypted.data2, prv.key.loaded))
print(decrypted_message2)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
library(PKI)
rm(list = ls())
# 1) Generate keypair for ceu.edu and save it in pem format ------------------
key <- PKI.genRSAkey(bits = 2048L)
prv.pem <- PKI.save.key(key, private=TRUE)
pub.pem <- PKI.save.key(key, private=FALSE)
# 2) ceu.edu sends private pem file to visitor ------------------------------------
write(pub.pem, file="id_ceu_edu.pub")
write(prv.pem, file="id_ceu_edu")
# 3) visitor creates encrypted message using CEU's public key ------------------------
##load pem format and convert to key
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
## encrprypt random message with CEU's private key
message <- 'Something that should be encrpyted'
bytes.to.encode = charToRaw(message)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
# 4) visitor sends encrypted message to CEU ----------------------------------
writeBin(encrypted, file("encrypted_message.dat", "wb"))
close(file("encrypted_message.dat", "wb"))
# Adding second message ---------------------------------------------------
pub.pem.loaded <- scan("id_ceu_edu.pub", what='list', sep='\n')
pub.key.loaded <- PKI.load.key(pub.pem.loaded)
message2 <- 'This shall be the big big message'
bytes.to.encode = charToRaw(message2)
encrypted <- PKI.encrypt(bytes.to.encode, pub.key.loaded)
writeBin(encrypted, file("encrypted_message2.dat", "wb"))
close(file("encrypted_message2.dat", "wb"))
# 5) CEU reads it's private key from disk + decrypts message -----------------
##load private key from disk + convert to key
prv.pem.loaded <- scan("id_ceu_edu", what='list', sep='\n')
prv.key.loaded <- PKI.load.key(prv.pem.loaded)
## read encrypted file from disk
read.binfile <- file("encrypted_message.dat", "rb")
reread.encrypted.data <- readBin(read.binfile, raw(), n=999999999)
close(read.binfile)
## read second message
read.binfile2 <- file("encrypted_message2.dat", "rb")
reread.encrypted.data2 <- readBin(read.binfile2, raw(), n=999999999)
close(read.binfile2)
## decrypt file with private key + print it on screen
decrypted_message <- rawToChar(PKI.decrypt(reread.encrypted.data, prv.key.loaded))
print(decrypted_message)
library(WDI)
url <- 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports'
date <- '10-05-2020'
csv <- paste0(url,date,'csv')
csv
csv <- paste0(url,date,'.csv')
csv_location <- paste0(url,date,'.csv')
covid_data <- read.csv(csv_location)
csv_location <- paste0(url,'/',date,'.csv')
covid_data <- read.csv(csv_location)
View(covid_data)
library(tidyverse)
csv_location <- paste0(url,'/',date,'.csv')
covid_data <- read_csv(csv_location)
csv.location
csv_location
url <- 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports'
date <- '10-05-2020'
csv_location <- paste0(url,'/',date,'.csv')
covid_data <- read.csv(csv_location)
View(covid_data)
date <- '11-05-2020'
covid_url <- paste0('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/',
date,'.csv')
covid_raw <- read.csv(covid_url)
date <- '10-05-2020'
date <- '11-05-2020'
covid_url <- paste0('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/',
date,'.csv')
covid_raw <- read.csv(covid_url)
date <- '10-05-2020'
covid_url <- paste0('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/',
date,'.csv')
covid_raw <- read.csv(covid_url)
covid_url == csv_location
covid_url
csv_locatio
csv_location
url <- 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports'
date <- '10-05-2020'
csv_location <- paste0(url,'/',date,'.csv')
covid_data <- read.csv(csv_location)
# Then we get population data from WDI
population_data <- WDI(indicator=c('SP.POP.TOTL'),
country="all", start=2019, end=2019)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
covid_data <- read_csv(csv_location)
#finally, writing out raw files to github
write_csv(covid_raw, paste0(my_path,'../data/raw/covid_20201015_raw.csv'))
getwd()
#finally, writing out raw files to github
write_csv(covid_data, '../data/raw/covid_20201015_raw.csv')
write_csv(population_data, '../data/raw/population_2019_raw.csv')
